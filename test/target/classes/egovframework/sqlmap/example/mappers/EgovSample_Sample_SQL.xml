<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.example.sample.service.impl.SampleMapper">

	<resultMap id="sample" type="egovframework.example.sample.service.SampleVO">
		<!-- <result property="billNum" column="billNum"/>
		<result property="no" column="no"/>
		<result property="useDate" column="useDate"/>
		<result property="useDetailCode" column="useDetail"/> -->
	</resultMap>

	 <insert id="insertSample" parameterType="SampleVO">

			INSERT INTO TB_BILL
				( BILL_NO
				  , USE_DTL_CD
				  , USE_DATE
				  , USE_PRICE
				  , FILE_NM
				  , FILE_PATH 
				  , REG_DATE)
			VALUES ( 
					(SELECT NVL(MAX(BILL_NO), 0) + 1 FROM TB_BILL)
				  , #{useDtlCd, jdbcType=VARCHAR}
				  , #{useDate, jdbcType=DATE}
				  , #{usePrice, jdbcType=VARCHAR}
				  , #{fileNm, jdbcType=VARCHAR}
				  , #{filePath, jdbcType=VARCHAR}
				  , SYSDATE )

	</insert>
	
	 <select id="selectBillDtl" parameterType="SampleVO" resultType="egovMap">
	     SELECT
					BILL_NO
				  , B.USE_DTL_CD
				  , D.USE_DTL_NM
				  , TO_CHAR(USE_PRICE,'999,999,999,999') AS USE_PRICE
				  , TO_CHAR(USE_DATE,'yyyy-mm-dd') AS USE_DATE
				  , TO_CHAR(APPROVE_PRICE,'999,999,999,999') AS APPROVE_PRICE
				  , B.STATE_CD
				  , S.STATE_NM
				  , TO_CHAR(STATE_DATE,'yyyy-mm-dd') AS STATE_DATE
				  , ETC
				  , FILE_NM
				  , FILE_PATH
			FROM TB_BILL B
			LEFT OUTER JOIN TB_USEDETAIL D
				 ON D.USE_DTL_CD = B.USE_DTL_CD
			LEFT OUTER JOIN TB_STATE S
				 ON S.STATE_CD = B.STATE_CD
			WHERE 1=1
				AND B.BILL_NO = #{billNo, jdbcType=INTEGER}
	     	
	 </select>

	<update id="updateDetail" parameterType="SampleVO">

			UPDATE TB_BILL
			SET
				, USE_DTL_CD = #{useDtlCd, jdbcType=VARCHAR}
				, USE_DATE = #{useDate, jdbcType=Date}
				, USE_PRICE = #{usdPrice, jdbcType=VARCHAR}
				<if test="fileNm != null and fileNm != '' ">
					, FILE_NM = #{fileNm, jdbcType=VARCHAR}
				</if>
				<if test="filePath != null and filePath != '' ">
					, FILE_PATH = #{filePath, jdbcType=VARCHAR}
				</if>
				, STATE_CD = #{stateCd, jdbcType=VARCHAR}
				, STATE_DATE = #{stateDate, jdbcType=Date}
				, APPROVE_PRICE = #{approvePrice, jdbcType=VARCHAR}
				, ETC = #{etc, jdbcType=VARCHAR}
				, UP_DATE = SYSDATE)
			WEHRE 1=1 
				AND B.BILL_NO = #{billNo, jdbcType=INTEGER}

	</update>
<!--
	<delete id="deleteSample">

			DELETE FROM SAMPLE
			WHERE ID=#{id}

	</delete>

	<select id="selectSample" resultMap="sample">

			SELECT
				ID, NAME, DESCRIPTION, USE_YN, REG_USER
			FROM SAMPLE
			WHERE ID=#{id}

	</select> -->

	<select id="selectSampleList" parameterType="searchVO" resultType="egovMap">

			SELECT
					BILL_NO
				  , NO
				  , D.USE_DTL_NM
				  , TO_CHAR(USE_PRICE,'999,999,999,999') AS USE_PRICE
				  , TO_CHAR(USE_DATE,'yyyy-mm-dd') AS USE_DATE
				  , TO_CHAR(APPROVE_PRICE,'999,999,999,999') AS APPROVE_PRICE
				  , S.STATE_NM
				  , TO_CHAR(STATE_DATE,'yyyy-mm-dd') AS STATE_DATE
				  , ETC
				  , FILE_NM
				  , FILE_PATH
				  , TO_CHAR(REG_DATE,'yyyy-mm-dd') AS REG_DATE
				  , TO_CHAR(UP_DATE,'yyyy-mm-dd') AS UP_DATE
			FROM TB_BILL B
			LEFT OUTER JOIN TB_USEDETAIL D
				 ON D.USE_DTL_CD = B.USE_DTL_CD
			LEFT OUTER JOIN TB_STATE S
				 ON S.STATE_CD = B.STATE_CD
			WHERE 1=1
			<!-- 등록연월 -->
			<!-- <if test="searchYm != null and searchYm != ''">
			    AND TO_CHAR()
			</if> -->
			<!-- 사용내역 -->
			<if test="searchDetailCode != null and searchDetailCode != ''">
				AND D.USE_DTL_CD = #{searchDetailCode, jdbcType=VARCHAR}    
			</if>
			<!-- 처리상태 -->
			<if test="searchStateCode != null and searchStateCode != ''">
				AND S.STATE_CD = #{searchStateCode, jdbcType=VARCHAR}    
			</if>
			ORDER BY REG_DATE DESC
	</select>

	<select id="selectSampleListTotCnt" parameterType="searchVO" resultType="int">

			SELECT COUNT(*) totcnt
			FROM TB_BILL
			<!-- WHERE 1=1
			<if test="searchKeyword != null and searchKeyword != ''">
		        <choose>
		            <when test="searchCondition == 0">
						AND ID LIKE '%' || #{searchKeyword} || '%'
					</when>
		            <when test="searchCondition == 1">
						AND	NAME LIKE '%' || #{searchKeyword} || '%'
					</when>
				</choose>
			</if> -->
	</select>

</mapper>