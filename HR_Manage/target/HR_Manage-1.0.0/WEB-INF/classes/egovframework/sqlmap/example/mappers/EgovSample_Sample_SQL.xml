<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.example.sample.service.impl.SampleMapper">

	<resultMap id="sample" type="egovframework.example.sample.service.SampleVO">
		<result property="memberNo" column="MEMBER_NO"/>
		<result property="memberKnm" column="MEMBER_KNM"/>
		<result property="memberEnm" column="MEMBER_ENM"/>
		<result property="memberJnm" column="MEMBER_JNM"/>
		<result property="rrn1" column="RRN1"/>
		<result property="rrn2" column="RRN2"/>
		<result property="eduNm" column="EDU_NM"/>
		<result property="eduStartDate" column="EDU_START_DATE"/>
		<result property="eduEndDate" column="EDU_END_DATE"/>
		<result property="eduAgency" column="EDU_AGENCY"/>
	</resultMap>

	<insert id="insertMember" parameterType="SampleVO">

	    	<!-- 멤버등록 -->
			INSERT INTO TB_HR
				( 	MEMBER_NO
				  , MEMBER_KNM
				  , MEMBER_ENM
				  , MEMBER_JNM
				  , RRN1
				  , RRN2
				  , FILE_NM
				  , FILE_PATH
				  , B_YEAR
				  , B_MONTH
				  , B_DAY
				  , CALENDAR
				  , GENDER
				  , WEDDING
				  , CAREER
				  , MONEY_TYPE
				  , WORKING_TYPE
				  , JOIN_TYPE
				  , POST_CD
				  , ADDRESS
				  , PHONE_NO1
				  , PHONE_NO2
				  , PHONE_NO3
				  , EMAIL
				  , STAT
				  , ALCHOL
				  , LIST_STAT
				  , WORK_YDN
				   )
			VALUES ( (SELECT NVL(MAX(MEMBER_NO), 0) + 1 FROM TB_HR)
				  , #{memberKnm, jdbcType=VARCHAR}
				  , #{memberEnm, jdbcType=VARCHAR}
				  , #{memberJnm, jdbcType=VARCHAR}
				  , #{rrn1, jdbcType=VARCHAR}
				  , #{rrn2, jdbcType=VARCHAR}
				  , #{fileNm, jdbcType=VARCHAR}
				  , #{filePath, jdbcType=VARCHAR}
				  , #{bYear, jdbcType=VARCHAR}
				  , #{bMonth, jdbcType=VARCHAR}
				  , #{bDay, jdbcType=VARCHAR}
				  , #{calendar, jdbcType=VARCHAR}
				  , #{gender, jdbcType=VARCHAR}
				  , #{wedding, jdbcType=VARCHAR}
				  , #{career, jdbcType=VARCHAR}
				  , #{moneyType, jdbcType=VARCHAR}
				  , #{workingType, jdbcType=VARCHAR}
				  , #{joinType, jdbcType=VARCHAR}
				  , #{postCd, jdbcType=VARCHAR}
				  , #{address, jdbcType=VARCHAR}
				  , #{phoneNo1, jdbcType=VARCHAR}
				  , #{phoneNo2, jdbcType=VARCHAR}
				  , #{phoneNo3, jdbcType=VARCHAR}
				  , #{email, jdbcType=VARCHAR}
				  , #{stat, jdbcType=VARCHAR}
				  , #{alchol, jdbcType=VARCHAR}
				  , #{listStat, jdbcType=VARCHAR}
				  , #{workYdn, jdbcType=VARCHAR} )
			<!-- 	  
			학력
			INSERT INTO TB_GRAD ( MEMBER_NO )
			VALUES ( (SELECT NVL(MAX(MEMBER_NO), 0) + 1 FROM TB_GRAD) )
			
			교육기관
			INSERT INTO TB_EDU ( MEMBER_NO )
			VALUES ( (SELECT NVL(MAX(MEMBER_NO), 0) + 1 FROM TB_EDU) )
			
			자격증
			INSERT INTO TB_LICENSE ( MEMBER_NO )
			VALUES ( (SELECT NVL(MAX(MEMBER_NO), 0) + 1 FROM TB_LICENSE) )
			
			보유기술
			INSERT INTO TB_TECH ( MEMBER_NO )
			VALUES ( (SELECT NVL(MAX(MEMBER_NO), 0) + 1 FROM TB_TECH) )
			
			프로젝트
			INSERT INTO TB_PROJECT ( MEMBER_NO )
			VALUES ( (SELECT NVL(MAX(MEMBER_NO), 0) + 1 FROM TB_PROJECT) )
			
			경력
			INSERT INTO TB_CAREER ( MEMBER_NO )
			VALUES ( (SELECT NVL(MAX(MEMBER_NO), 0) + 1 FROM TB_CAREER) )
			
			근무
			INSERT INTO TB_WORK ( MEMBER_NO )
			VALUES ( (SELECT NVL(MAX(MEMBER_NO), 0) + 1 FROM TB_WORK) )
 -->
	</insert>
	
	<insert id="insertGrad" parameterType="SampleVO">

	    	<!-- 멤버등록 -->
			INSERT INTO TB_GRAD
				( 	MEMBER_NO
				  , GRAD_NO
				  , HIGH 
				  , H_MAJOR 
				  , H_YEAR 
				  , H_MONTH 
				  , COMPUTER 
				  , C_MAJOR 
				  , C_YEAR 
				  , C_MONTH 
				  , COLLEGE 
				  , CO_MAJOR 
				  , CO_YEAR 
				  , CO_MONTH 
				  , UNIVERSITY 
				  , U_MAJOR 
				  , U_YEAR 
				  , U_MONTH 
				   )
			VALUES ( 
					#{memberNo, jdbcType=INTEGER}
				  ,	(SELECT NVL(MAX(GRAD_NO), 0) + 1 FROM TB_GRAD WHERE MEMBER_NO = #{memberNo ,jdbcType=INTEGER})
				  , #{high, jdbcType=VARCHAR}
				  , #{hMajor, jdbcType=VARCHAR}
				  , #{hYear, jdbcType=VARCHAR}
				  , #{hMonth, jdbcType=VARCHAR}
				  , #{computer, jdbcType=VARCHAR}
				  , #{cMajor, jdbcType=VARCHAR}
				  , #{cYear, jdbcType=VARCHAR}
				  , #{cMonth, jdbcType=VARCHAR}
				  , #{college, jdbcType=VARCHAR}
				  , #{coMajor, jdbcType=VARCHAR}
				  , #{coYear, jdbcType=VARCHAR}
				  , #{coMonth, jdbcType=VARCHAR}
				  , #{university, jdbcType=VARCHAR}
				  , #{uMajor, jdbcType=VARCHAR}
				  , #{uYear, jdbcType=VARCHAR}
				  , #{uMonth, jdbcType=VARCHAR}
				  )
			
	</insert>

	<update id="updateSample">

			UPDATE TB_HR
			SET 
				<if test="memberKnm != null and memberKnm != ''">
			 	MEMBER_KNM = #{memberKnm ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="memberEnm != null and memberEnm != ''">
			 	, MEMBER_ENM = #{memberEnm ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="memberJnm != null and memberJnm != ''">
			 	, MEMBER_JNM = #{memberJnm ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="rrn1 != null and rrn1 != ''">
			 	, RRN1 = #{rrn1 ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="rrn2 != null and rrn2 != ''">
			 	, RRN2 = #{rrn2 ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="fileNm != null and fileNm != ''">
			 	, FILE_NM = #{fileNm ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="filePath != null and filePath != ''">
			 	, FILE_PATH = #{filePath ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="bYear != null and bYear != ''">
			 	, B_YEAR = #{bYear ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="bMonth != null and bMonth != ''">
			 	, B_MONTH = #{bMonth ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="bDay != null and bDay != ''">
			 	, B_DAY = #{bDay ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="calendar != null and calendar != ''">
			 	, CALENDAR = #{calendar ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="gender != null and gender != ''">
			 	, GENDER = #{gender ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="wedding != null and wedding != ''">
			 	, WEDDING = #{wedding ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="career != null and career != ''">
			 	, CAREER = #{career ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="moneyType != null and moneyType != ''">
			 	, MONEY_TYPE = #{moneyType ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="workingType != null and workingType != ''">
			 	, WORKING_TYPE = #{workingType ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="joinType != null and joinType != ''">
			 	, JOIN_TYPE = #{joinType ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="postCd != null and postCd != ''">
			 	, POST_CD = #{postCd ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="address != null and address != ''">
			 	, ADDRESS = #{address ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="phoneNo1 != null and phoneNo1 != ''">
			 	, PHONE_NO1 = #{phoneNo1 ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="phoneNo2 != null and phoneNo2 != ''">
			 	, PHONE_NO2 = #{phoneNo2 ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="phoneNo3 != null and phoneNo3 != ''">
			 	, PHONE_NO3 = #{phoneNo3 ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="email != null and email != ''">
			 	, EMAIL = #{email ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="stat != null and stat != ''">
			 	, STAT = #{stat ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="alchol != null and alchol != ''">
			 	, ALCHOL = #{alchol ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="listStat != null and listStat != ''">
			 	, LIST_STAT = #{listStat ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="workYdn != null and workYdn != ''">
			 	, WORK_YDN = #{workYdn ,jdbcType=VARCHAR}
			 	</if>
			 	
			WHERE MEMBER_NO = #{memberNo ,jdbcType=INTEGER}

	</update>
	
	<update id="updateGrad">

			UPDATE TB_GRAD
			SET 
			 	<if test="high != null and high != ''">
			 	, HIGH = #{high ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="hMajor != null and hMajor != ''">
			 	, H_MAJOR = #{hMajor ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="hYear != null and hYear != ''">
			 	, H_YEAR = #{hYear ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="hMonth != null and hMonth != ''">
			 	, H_MONTH = #{hMonth ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="computer != null and computer != ''">
			 	, COMPUTER = #{computer ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="cMajor != null and cMajor != ''">
			 	, C_MAJOR = #{cMajor ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="cYear != null and cYear != ''">
			 	, C_YEAR = #{cYear ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="cMonth != null and cMonth != ''">
			 	, C_MONTH = #{cMonth ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="college != null and college != ''">
			 	, COLLEGE = #{college ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="coMajor != null and coMajor != ''">
			 	, CO_MAJOR = #{coMajor ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="coYear != null and coYear != ''">
			 	, CO_YEAR = #{coYear ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="coMonth != null and coMonth != ''">
			 	, CO_MONTH = #{coMonth ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="university != null and university != ''">
			 	, UNIVERSITY = #{university ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="uMajor != null and uMajor != ''">
			 	, U_MAJOR = #{uMajor ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="uYear != null and uYear != ''">
			 	, U_YEAR = #{uYear ,jdbcType=VARCHAR}
			 	</if>
			 	<if test="yMonth != null and yMonth != ''">
			 	, U_MONTH = #{yMonth ,jdbcType=VARCHAR}	
			 	</if>		 	
			WHERE MEMBER_NO = #{memberNo ,jdbcType=INTEGER}
				AND GRAD_NO = #{gradNo ,jdbcType=INTEGER}
	</update>

	<delete id="deleteSample">

			DELETE FROM SAMPLE
			WHERE ID=#{id}

	</delete>

	<select id="selectMember" resultMap="sample">
			SELECT
				MEMBER_NO
				  , MEMBER_KNM
				  , MEMBER_ENM
				  , MEMBER_JNM
				  , RRN1
				  , RRN2
				  , FILE_NM
				  , FILE_PATH
				  , B_YEAR
				  , B_MONTH
				  , B_DAY
				  , CALENDAR
				  , GENDER
				  , WEDDING
				  , CAREER
				  , MONEY_TYPE
				  , WORKING_TYPE
				  , JOIN_TYPE
				  , POST_CD
				  , ADDRESS
				  , PHONE_NO1
				  , PHONE_NO2
				  , PHONE_NO3
				  , EMAIL
				  , STAT
				  , ALCHOL
				  , LIST_STAT
				  , WORK_YDN
			FROM TB_HR
			WHERE MEMBER_NO=#{memberNo, jdbcType=VARCHAR}

	</select>
	
	<select id="selectVgrad" resultMap="sample">
			SELECT
				H.MEMBER_NO
				  , H.MEMBER_KNM
				  , H.RRN1
				  , H.RRN2
				  , G.HIGH
				  , G.H_MAJOR
				  , G.H_YEAR
				  , G.H_MONTH
				  , G.COMPUTER
				  , G.C_MAJOR
				  , G.C_YEAR
				  , G.C_MONTH
				  , G.COLLEGE 
				  , G.CO_MAJOR
				  , G.CO_YEAR
				  , G.CO_MONTH
				  , G.UNIVERSITY
				  , G.U_MAJOR
				  , G.U_YEAR 
				  , G.U_MONTH
			FROM TB_GRAD G
			LEFT OUTER JOIN TB_HR H
				ON H.MEMBER_NO = G.MEMBER_NO
			WHERE H.MEMBER_NO=#{memberNo, jdbcType=VARCHAR}

	</select>
	 
	<select id="selectEdu"  resultMap="sample">
			SELECT
				  H.MEMBER_NO
				, H.MEMBER_KNM
				, H.RRN1
				, H.RRN2
				, E.EDU_NM
				, E.EDU_START_DATE
				, E.EDU_END_DATE
				, E.EDU_AGENCY
			FROM TB_EDU E
			LEFT OUTER JOIN TB_HR H
				ON H.MEMBER_NO = E.MEMBER_NO
			WHERE H.MEMBER_NO=#{memberNo, jdbcType=VARCHAR}

	</select>
	
	

	
	
	<select id="selectLicense" resultMap="sample">
			SELECT
				  H.MEMBER_NO
				, H.MEMBER_KNM
				, H.RRN1
				, H.RRN2
				, L.LICENSE_NM
				, L.L_DATE
			FROM TB_LICENSE L
			LEFT OUTER JOIN TB_HR H
				ON H.MEMBER_NO = L.MEMBER_NO
			WHERE H.MEMBER_NO=#{memberNo, jdbcType=VARCHAR}

	</select>
	
	<select id="selectTech" resultMap="sample">
			SELECT
				  H.MEMBER_NO
				, H.MEMBER_KNM
				, H.RRN1
				, H.RRN2
				, T.TECH_NM
				, T.T_LEVEL
			FROM TB_TECH T
			LEFT OUTER JOIN TB_HR H
				ON H.MEMBER_NO = T.MEMBER_NO
			WHERE H.MEMBER_NO=#{memberNo, jdbcType=VARCHAR}

	</select>

	<select id="selectProject" resultMap="sample">
			SELECT
				  H.MEMBER_NO
				, H.MEMBER_KNM
				, H.RRN1
				, H.RRN2
				, P.PROJECT_NM
				, P.P_START_DATE
				, P.P_END_DATE
				, P.CLIENT
				, P.WORK_COMPANY
				, P.FIELD
				, P.PART
				, P.MODEL_NM
				, P.OS
				, P.LANGUAGE
				, P.DBMS
				, P.TOOL
				, P.SOCKET
				, P.REMARK
			FROM TB_PROJECT P
			LEFT OUTER JOIN TB_HR H
				ON H.MEMBER_NO = P.MEMBER_NO
			WHERE H.MEMBER_NO=#{memberNo, jdbcType=VARCHAR}

	</select>
		
	<select id="selectCareer" resultMap="sample">
			SELECT
				  H.MEMBER_NO
				, H.MEMBER_KNM
				, H.RRN1
				, H.RRN2
				, C.COMPANY_NM
				, C.POSITION
				, C.START_DATE
				, C.END_DATE
				, C.TASK
			FROM TB_CAREER C
			LEFT OUTER JOIN TB_HR H
				ON H.MEMBER_NO = C.MEMBER_NO
			WHERE H.MEMBER_NO=#{memberNo, jdbcType=VARCHAR}

	</select>
	
	<select id="selectWork" resultMap="sample">
			SELECT
				  H.MEMBER_NO
				, H.MEMBER_KNM
				, H.RRN1
				, H.RRN2
				, W.WORK_PROJECT_NM
				, W.PLACE
				, W.WORK_START_DATE
				, W.WORK_END_DATE
				, W.SALES_PRICE
				, W.SIGN_PRE_DATE
				, W.SIGN_DATE
				, W.CUSTOMER
			FROM TB_WORK W
			LEFT OUTER JOIN TB_HR H
				ON H.MEMBER_NO = W.MEMBER_NO
			WHERE H.MEMBER_NO=#{memberNo, jdbcType=VARCHAR}

	</select> 
	<select id="selectSampleList" parameterType="searchVO" resultType="egovMap">

			SELECT
					MEMBER_NO
				  , MEMBER_KNM
				  , RRN1
				  , RRN2
				  , CASE WHEN GENDER = 1 THEN '남자' ELSE '여자'	END AS GENDER
				  , STAT
				  , LIST_STAT
				  , CASE WHEN WORK_YDN = 'Y' THEN '근무'
				  		 WHEN WORK_YDN = 'D' THEN '대기'
				  		 ELSE '퇴사' 
				    END AS WORK_YDN
			FROM TB_HR
			<!-- WHERE 1=1
			<if test="searchKeyword != null and searchKeyword != ''">
		        <choose>
		            <when test="searchCondition == 0">
						AND	ID LIKE '%' || #{searchKeyword} || '%'
					</when>
		            <when test="searchCondition == 1">
						AND	NAME LIKE '%' || #{searchKeyword} || '%'
					</when>
				</choose>
			</if>
			ORDER BY ID ASC
			LIMIT #{recordCountPerPage} OFFSET #{firstIndex} -->
	</select>

	<select id="selectSampleListTotCnt" parameterType="searchVO" resultType="int">

			SELECT COUNT(*) totcnt
			FROM TB_HR
			WHERE 1=1
			<!-- <if test="searchKeyword != null and searchKeyword != ''">
		        <choose>
		            <when test="searchCondition == 0">
						AND ID LIKE '%' || #{searchKeyword} || '%'
					</when>
		            <when test="searchCondition == 1">
						AND	NAME LIKE '%' || #{searchKeyword} || '%'
					</when>
				</choose>
			</if> -->
	</select>
		

</mapper>